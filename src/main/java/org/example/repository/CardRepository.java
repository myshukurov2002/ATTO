package org.example.repository;import lombok.Getter;import lombok.NoArgsConstructor;import lombok.Setter;import org.example.controller.CardController;import org.example.entity.Card;import org.example.entity.Profile;import org.example.entity.Transaction;import org.example.util.DataBaseManager;import org.example.util.Utils;import java.math.BigDecimal;import java.sql.*;import java.time.LocalDateTime;import static org.example.util.Utils.formatter;@Getter@Setter@NoArgsConstructorpublic class CardRepository {    public void createCard(Card card) {        String sql = "insert into cards(number, exp_date, balance, status, created_date)" +                " values(?,?,?,?,?) ";        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)) {            preparedStatement.setString(1, card.getNumber());            preparedStatement.setString(2, card.getExpDate());            preparedStatement.setBigDecimal(3, card.getBalance());            preparedStatement.setString(4, card.getStatus().name());            preparedStatement.setTimestamp(5, Timestamp.valueOf(card.getCreatedDate()));            preparedStatement.execute();            System.out.println("Success");        } catch (SQLException | ClassNotFoundException e) {            throw new RuntimeException(e.getMessage());        }    }    public void deleteCard(String phone) {        String sql = "delete from cards where phone = ?;";        try(Connection connection = DataBaseManager.getConnection();            PreparedStatement preparedStatement = connection.prepareStatement(sql)) {            preparedStatement.setString(1,phone);            preparedStatement.execute();            System.out.println("Success");        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }    public void changeCardStatus(String phone) {        try (Connection connection = DataBaseManager.getConnection()) {            Boolean key = getCardStatusByPhone(phone);            String sql;            if (key) {                sql = "update cards set status = 'NON_ACTIVE'";            } else {                sql = "update cards set status = 'ACTIVE'";            }            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {                preparedStatement.execute();            }        } catch (SQLException | ClassNotFoundException e) {            throw new RuntimeException(e);        }    }    public Boolean getCardStatusByPhone(String phone) throws RuntimeException {        String sql = "select * from cards where phone = ?";        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)){            preparedStatement.setString(1,phone);            preparedStatement.execute();            ResultSet resultSet = preparedStatement.getResultSet();            while (resultSet.next()) {                if (resultSet.getString("status").equals(Profile.Status.ACTIVE.name())) {                    return true;                }            }            return false;        } catch (SQLException | ClassNotFoundException e) {            throw new RuntimeException(e);        }    }    public void updateCard(String phone) {        String newCardNumber = Utils.getCardNumber();        String newExpDate = Utils.getExpDate();        String sql = "update cards set number = ?, exp_date = ?";        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)){            preparedStatement.setString(1,newCardNumber);            preparedStatement.setString(2,newExpDate);            preparedStatement.execute();            System.out.println("Success");        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }    public void cardList() {        try (Connection connection = DataBaseManager.getConnection()) {            String sql = "select * from cards";            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {                preparedStatement.execute();                ResultSet resultSet = preparedStatement.getResultSet();                while (resultSet.next()) {                    Card card = new Card();                    card.setId(resultSet.getInt("id"));                    card.setIdUser(resultSet.getInt("id_user"));                    card.setNumber(resultSet.getString("number"));                    card.setExpDate(resultSet.getString("exp_date"));                    card.setBalance(resultSet.getBigDecimal("balance"));                    card.setStatus(Profile.Status.valueOf(resultSet.getString("status")));                    card.setPhone(resultSet.getString("phone"));                    card.setCreatedDate(LocalDateTime.parse(resultSet.getString("created_date"), formatter));                }            }        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }    public void cardList(String phone) {        try (Connection connection = DataBaseManager.getConnection()) {            String sql = "select * from cards where phone = ?";            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {                preparedStatement.setString(1,phone);                preparedStatement.execute();                ResultSet resultSet = preparedStatement.getResultSet();                while (resultSet.next()) {                    Card card = new Card();                    card.setId(resultSet.getInt("id"));                    card.setIdUser(resultSet.getInt("id_user"));                    card.setNumber(resultSet.getString("number"));                    card.setExpDate(resultSet.getString("exp_date"));                    card.setBalance(resultSet.getBigDecimal("balance"));                    card.setStatus(Profile.Status.valueOf(resultSet.getString("status")));                    card.setPhone(resultSet.getString("phone"));                    card.setCreatedDate(LocalDateTime.parse(resultSet.getString("created_date"), formatter));                    System.out.println(card);                }            }        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }    public Card getCardByPhone(String phone) {        try (Connection connection = DataBaseManager.getConnection()) {            String sql = "select * from cards where phone = ?";            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {                preparedStatement.setString(1,phone);                preparedStatement.execute();                ResultSet resultSet = preparedStatement.getResultSet();                while (resultSet.next()) {                    Card card = new Card();                    card.setId(resultSet.getInt("id"));                    card.setIdUser(resultSet.getInt("id_user"));                    card.setNumber(resultSet.getString("number"));                    card.setExpDate(resultSet.getString("exp_date"));                    card.setBalance(resultSet.getBigDecimal("balance"));                    card.setStatus(Profile.Status.valueOf(resultSet.getString("status")));                    card.setPhone(resultSet.getString("phone"));                    card.setCreatedDate(LocalDateTime.parse(resultSet.getString("created_date"), formatter));                    return card;                }            }        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }        return null;    }    public void updateCard(Card card) {        String sql = "update cards set balance = balance + ? where phone = ?";        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)){            preparedStatement.setBigDecimal(1, card.getBalance());            preparedStatement.setString(2,card.getPhone());            preparedStatement.execute();            System.out.println("Success");        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }    public void attoPay(Profile profile, String terminalCode) {        String sql = "insert into transaction(card_number, phone, terminal_code, type, amount) " +        "values (?, ?, ?, ?, ?);";        String update = "update cards set balance = balance - 1400 where phone = ?;";        String fill = "update company set balance = balance + 1400 where id = 1";        Card card = getCardByPhone(profile.getPhone());        BigDecimal amount = BigDecimal.valueOf(1400);        if (card.getBalance().compareTo(amount) < 0) {            System.err.println("You don't have enough money");            return;        }        try(Connection connection = DataBaseManager.getConnection();            PreparedStatement pr = connection.prepareStatement(update);            PreparedStatement pr2 = connection.prepareStatement(sql);            PreparedStatement pr3 = connection.prepareStatement(fill);            ){            //update card balance by phone            pr.setString(1,profile.getPhone());            pr.execute();            //make transaction            pr2.setString(1,card.getNumber());            pr2.setString(2, profile.getPhone());            pr2.setString(3, terminalCode);            pr2.setString(4, Transaction.Type.PAYMENT.name());            pr2.setBigDecimal(5, amount);            pr2.execute();            pr3.execute();            System.out.println("Success");        } catch (SQLException | ClassNotFoundException e) {            throw new RuntimeException(e);        }    }    public void transactionList() {        String sql = "select * from transaction";        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)){            preparedStatement.execute();            ResultSet resultSet = preparedStatement.getResultSet();            while (resultSet.next()) {                Transaction transaction = new Transaction();                transaction.setId(resultSet.getInt("id"));                transaction.setCard_number(resultSet.getString("card_number"));                transaction.setTerminal_code(resultSet.getString("terminal_code"));                transaction.setType(Transaction.Type.valueOf(resultSet.getString("type")));                transaction.setCreated_date(String.valueOf(resultSet.getTimestamp("created_date")));                System.out.println(transaction);            }                    } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }    public void statistics(Profile profile) {        String sql = "select * from transaction where phone = ?";        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)){            preparedStatement.setString(1,profile.getPhone());            preparedStatement.execute();            ResultSet resultSet = preparedStatement.getResultSet();            while (resultSet.next()) {                Transaction transaction = new Transaction();                transaction.setId(resultSet.getInt("id"));                transaction.setCard_number(resultSet.getString("card_number"));                transaction.setPhone(resultSet.getString("phone"));                transaction.setTerminal_code(resultSet.getString("terminal_code"));                transaction.setType(Transaction.Type.valueOf(resultSet.getString("type")));                transaction.setAmount(resultSet.getBigDecimal("amount"));                transaction.setCreated_date(String.valueOf(resultSet.getTimestamp("created_date")));                System.out.println(transaction);            }        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }}