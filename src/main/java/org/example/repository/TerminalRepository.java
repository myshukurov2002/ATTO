package org.example.repository;import org.example.entity.Profile;import org.example.entity.Terminal;import org.example.util.DataBaseManager;import org.example.util.Utils;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.time.LocalDateTime;import static org.example.util.Utils.formatter;public class TerminalRepository {    public void createTerminal() throws RuntimeException {        String sql = "insert into terminal(code, address, status)values (?,?,?);";        System.out.print("Code >> ");        String code = Utils.getStringScanner();        System.out.print("Address >> ");        String address = Utils.getStringScanner();        System.out.print("Status >> ");        String status = Utils.getStringScanner();        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)){            preparedStatement.setString(1, code);            preparedStatement.setString(2, address);            preparedStatement.setString(3, status);            preparedStatement.execute();            System.out.println("Success");        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }    public void getTerminalList() {        String sql = "select * from terminal;";        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)){            preparedStatement.execute();            ResultSet resultSet = preparedStatement.getResultSet();            while (resultSet.next()) {                Terminal terminal = new Terminal();                terminal.setId(resultSet.getInt("id"));                terminal.setCode(resultSet.getString("code"));                terminal.setStatus(Profile.Status.valueOf(resultSet.getString("status")));                terminal.setCreatedDate(LocalDateTime.parse(resultSet.getString("created_date"), formatter));                System.out.println(terminal);            }        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }    public void updateTerminal() {        String sql = "update terminal set code = ?, status = ? where code = ?";        System.out.print("Enter code >> ");        String code = Utils.getStringScanner();        System.out.print("Code >> ");        String newCode = Utils.getStringScanner();        System.out.print("Status >> ");        String newStatus = Utils.getStringScanner();        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)){            preparedStatement.setString(1, newCode);            preparedStatement.setString(2, newStatus);            preparedStatement.setString(3, code);            preparedStatement.execute();            System.out.println("Success");        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }    public void changeTerminalStatus() {        String sql = "update terminal set status = ? where code = ?";        System.out.print("Enter code >> ");        String code = Utils.getStringScanner();        System.out.print("Status >> ");        String newStatus = Utils.getStringScanner();        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)){            preparedStatement.setString(1, newStatus);            preparedStatement.setString(2, code);            preparedStatement.execute();            System.out.println("Success");        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }    public void deleteTerminal() {        String sql = "delete from terminal where code = ?";        System.out.print("Enter code >> ");        String code = Utils.getStringScanner();        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)){            preparedStatement.setString(1, code);            preparedStatement.execute();            System.out.println("Success");        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }}