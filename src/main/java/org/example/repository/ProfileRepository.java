package org.example.repository;import lombok.Getter;import lombok.Setter;import org.example.entity.Profile;import org.example.util.DataBaseManager;import java.sql.*;import java.time.LocalDateTime;import java.util.Optional;import static org.example.entity.Profile.Status.ACTIVE;import static org.example.util.Utils.formatter;@Getter@Setterpublic class ProfileRepository {    public void register(Profile profile) throws SQLException, ClassNotFoundException {        String sql = "insert into profiles( name, surname, phone, password, created_date, status, role) VALUES(?, ?, ?, ?, ?, ?, ?);";        try (Connection connection = DataBaseManager.getConnection(); PreparedStatement preparedStatement = connection.prepareStatement(sql)) {            preparedStatement.setString(1, profile.getName());            preparedStatement.setString(2, profile.getSurname());            preparedStatement.setString(3, profile.getPhone());            preparedStatement.setString(4, profile.getPassword());            preparedStatement.setTimestamp(5, Timestamp.valueOf(profile.getCreatedDate()));            preparedStatement.setString(6, profile.getStatus().name());            preparedStatement.setString(7, profile.getRole().name());            preparedStatement.executeUpdate();        } catch (Exception e) {            System.out.println(e.getMessage());        }    }    public Optional<Profile> getByPhone(String phone) {        String sql = "select * from profiles where phone = ? and status = ?";        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)) {            preparedStatement.setString(1, phone);            preparedStatement.setString(2, ACTIVE.name());            ResultSet resultSet = preparedStatement.executeQuery();            Profile profile = null;            while (resultSet.next()) {                profile = new Profile();                profile.setId(resultSet.getInt("id"));                profile.setName(resultSet.getString("name"));                profile.setSurname(resultSet.getString("surname"));                profile.setPhone(resultSet.getString("phone"));                profile.setPassword(resultSet.getString("password"));                profile.setCreatedDate(LocalDateTime.parse(resultSet.getString("created_date"), formatter));                profile.setStatus(Profile.Status.valueOf(resultSet.getString("status")));                profile.setRole(Profile.Role.valueOf(resultSet.getString("role")));            }            return Optional.ofNullable(profile);        } catch (Exception e) {            return Optional.empty();        }    }    public void getProfiles() {        String sql = "select * from profiles";        try (Connection connection = DataBaseManager.getConnection();             PreparedStatement preparedStatement = connection.prepareStatement(sql)) {            ResultSet resultSet = preparedStatement.executeQuery();            Profile profile = null;            while (resultSet.next()) {                profile = new Profile();                profile.setId(resultSet.getInt("id"));                profile.setName(resultSet.getString("name"));                profile.setSurname(resultSet.getString("surname"));                profile.setPhone(resultSet.getString("phone"));                profile.setPassword(resultSet.getString("password"));                profile.setCreatedDate(LocalDateTime.parse(resultSet.getString("created_date"), formatter));                profile.setStatus(Profile.Status.valueOf(resultSet.getString("status")));                profile.setRole(Profile.Role.valueOf(resultSet.getString("role")));                System.out.println(profile);            }        } catch (Exception e) {            System.out.println(e.getMessage());        }    }}